Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> command
Rule 1     command -> GO DIRECTION
Rule 2     command -> DIRECTION
Rule 3     command -> GO TO words
Rule 4     command -> TAKE words
Rule 5     command -> TAKE NUMBER words
Rule 6     command -> DROP words
Rule 7     command -> DROP NUMBER words
Rule 8     command -> EAT words
Rule 9     command -> LOOK
Rule 10    command -> QUIT
Rule 11    command -> INSPECT words
Rule 12    command -> LOOK AT words
Rule 13    command -> INVENTORY
Rule 14    words -> WORD words
Rule 15    words -> WORD

Terminals, with rules where they appear

AT                   : 12
DIRECTION            : 1 2
DROP                 : 6 7
EAT                  : 8
GO                   : 1 3
INSPECT              : 11
INVENTORY            : 13
LOOK                 : 9 12
NUMBER               : 5 7
QUIT                 : 10
TAKE                 : 4 5
TO                   : 3
WORD                 : 14 15
error                : 

Nonterminals, with rules where they appear

command              : 0
words                : 3 4 5 6 7 8 11 12 14

Parsing method: LALR

state 0

    (0) S' -> . command
    (1) command -> . GO DIRECTION
    (2) command -> . DIRECTION
    (3) command -> . GO TO words
    (4) command -> . TAKE words
    (5) command -> . TAKE NUMBER words
    (6) command -> . DROP words
    (7) command -> . DROP NUMBER words
    (8) command -> . EAT words
    (9) command -> . LOOK
    (10) command -> . QUIT
    (11) command -> . INSPECT words
    (12) command -> . LOOK AT words
    (13) command -> . INVENTORY

    GO              shift and go to state 9
    DIRECTION       shift and go to state 2
    TAKE            shift and go to state 8
    DROP            shift and go to state 6
    EAT             shift and go to state 10
    LOOK            shift and go to state 4
    QUIT            shift and go to state 1
    INSPECT         shift and go to state 3
    INVENTORY       shift and go to state 5

    command                        shift and go to state 7

state 1

    (10) command -> QUIT .

    $end            reduce using rule 10 (command -> QUIT .)


state 2

    (2) command -> DIRECTION .

    $end            reduce using rule 2 (command -> DIRECTION .)


state 3

    (11) command -> INSPECT . words
    (14) words -> . WORD words
    (15) words -> . WORD

    WORD            shift and go to state 11

    words                          shift and go to state 12

state 4

    (9) command -> LOOK .
    (12) command -> LOOK . AT words

    $end            reduce using rule 9 (command -> LOOK .)
    AT              shift and go to state 13


state 5

    (13) command -> INVENTORY .

    $end            reduce using rule 13 (command -> INVENTORY .)


state 6

    (6) command -> DROP . words
    (7) command -> DROP . NUMBER words
    (14) words -> . WORD words
    (15) words -> . WORD

    NUMBER          shift and go to state 14
    WORD            shift and go to state 11

    words                          shift and go to state 15

state 7

    (0) S' -> command .



state 8

    (4) command -> TAKE . words
    (5) command -> TAKE . NUMBER words
    (14) words -> . WORD words
    (15) words -> . WORD

    NUMBER          shift and go to state 17
    WORD            shift and go to state 11

    words                          shift and go to state 16

state 9

    (1) command -> GO . DIRECTION
    (3) command -> GO . TO words

    DIRECTION       shift and go to state 19
    TO              shift and go to state 18


state 10

    (8) command -> EAT . words
    (14) words -> . WORD words
    (15) words -> . WORD

    WORD            shift and go to state 11

    words                          shift and go to state 20

state 11

    (14) words -> WORD . words
    (15) words -> WORD .
    (14) words -> . WORD words
    (15) words -> . WORD

    $end            reduce using rule 15 (words -> WORD .)
    WORD            shift and go to state 11

    words                          shift and go to state 21

state 12

    (11) command -> INSPECT words .

    $end            reduce using rule 11 (command -> INSPECT words .)


state 13

    (12) command -> LOOK AT . words
    (14) words -> . WORD words
    (15) words -> . WORD

    WORD            shift and go to state 11

    words                          shift and go to state 22

state 14

    (7) command -> DROP NUMBER . words
    (14) words -> . WORD words
    (15) words -> . WORD

    WORD            shift and go to state 11

    words                          shift and go to state 23

state 15

    (6) command -> DROP words .

    $end            reduce using rule 6 (command -> DROP words .)


state 16

    (4) command -> TAKE words .

    $end            reduce using rule 4 (command -> TAKE words .)


state 17

    (5) command -> TAKE NUMBER . words
    (14) words -> . WORD words
    (15) words -> . WORD

    WORD            shift and go to state 11

    words                          shift and go to state 24

state 18

    (3) command -> GO TO . words
    (14) words -> . WORD words
    (15) words -> . WORD

    WORD            shift and go to state 11

    words                          shift and go to state 25

state 19

    (1) command -> GO DIRECTION .

    $end            reduce using rule 1 (command -> GO DIRECTION .)


state 20

    (8) command -> EAT words .

    $end            reduce using rule 8 (command -> EAT words .)


state 21

    (14) words -> WORD words .

    $end            reduce using rule 14 (words -> WORD words .)


state 22

    (12) command -> LOOK AT words .

    $end            reduce using rule 12 (command -> LOOK AT words .)


state 23

    (7) command -> DROP NUMBER words .

    $end            reduce using rule 7 (command -> DROP NUMBER words .)


state 24

    (5) command -> TAKE NUMBER words .

    $end            reduce using rule 5 (command -> TAKE NUMBER words .)


state 25

    (3) command -> GO TO words .

    $end            reduce using rule 3 (command -> GO TO words .)

